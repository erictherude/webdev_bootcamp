Intro to the DOM:
DOM = Document Object Model
the interface between JS and HTML+CSS
browser turns every HTML element in a doc into a JS object we can manipulate

<!DOCTYPE html>
<html>
<head>
	<title>My Title</title>
</head>
<body>
	<a href="someLink">My Link</a>
	<h1>My Header</h1>
</body>
</html>

document
	root element: <html>
		element: <head>
			element: <title>
				text: "My Title"
		element: <body>
			element: <a>
				attribute: "href"
					value: "someLink"
				text: "My Link"
			element: <h1>
				text: "My Header"



Select and Manipulate elements in the DOM:
// Example 1 
let h1 = document.querySelector("h1");		// SELECT
h1.style.color = "pink";					// MANIPULATE

// Example 2
let body = document.querySelector("body");	// SELECT
let isBlue = false;

setInterval(function() {					// MANIPULATE
	if(isBlue) {
		body.style.background = "white";
	} else {
		body.style.background = "#3498db";
	}
	isBlue = !isBlue;
}, 1000);



Important Selector Methods:

document.getElementByID()
document.getElementsByClassName()
document.getElementsByTagName()
document.querySelector()		// Returns first element that matches a given CSS-style selector
document.querySelectorAll()		// Returns all elements that match a given CSS-style selector



MANIPULATING THE DOM


Manipulating Style:

DOM element style property

let tag = document.getElementByID("highlight");

tag.style.color = "blue";
tag.style.border = "10px solid red";
tag.style.fontSize = "70px";
tag.style.background = "yellow";
tag.style.marginTop = "200px";

note that right side is always string

if changing muliple things, better to change class and have CSS change style (separation of concerns):
tag.classList.add("class-name");		// adds a class
tag.classList.remove("class-name");		// removes a class
tag.classList.toggle("class-name");		// removes if present, adds if not

classList is not an array - use above commands to modify



Manipulating Text and Content:

textContent - returns a string of all text contained in an element
innerHTML - returns a string of all text and tags contained in an element

// HTML
<p>	This an <strong>awesome</strong> paragraph.</p>

// select the <p> tag:
> let tag = document.querySelector("p");

//Retrieve the textContent
> tag.textContent;
< "This is an awesome paragraph." // text only, no tags

// Retrieve the innerHTML
> tag.innerHTML;
< "This an <strong>awesome</strong> paragraph."

// alter the textContent
> tag.textContent = "blah blah blah";
< "blah blah blah"

// alter the innerHTML
> tag.innerHTML = "blah <em>blah</em> blah";
< "blah blah blah"

attempting to add tags with textContent just display the tags as if they were text



Manipulating Attributes:

getAttribute() and setAttribute() read and write attributes

getAttribute(_att_)
setAttribute(_att_, _value_)
























