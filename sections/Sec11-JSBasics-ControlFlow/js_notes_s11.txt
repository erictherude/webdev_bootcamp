BOOLEAN OPERATORS

Comparison Operators:
>		greater than
>=		greater than or equal to
<		less than
<=		greater than or equal to
==		equal to
!=		not equal to
===		equal value and type (strict equal to)
!==		not equal value and type (strict not equal to)

== performs type coercion, === does not
=== is best in most cases -more specific

Logical Operators:
(for x = 5 and y = 9)
&&		AND		x < 10 && x !== 5	FALSE
||		OR 		x < 10 || x !== 5	TRUE
!		NOT 	!(x === y)			TRUE



JS CONDITIONALS

IF, ELSE IF, ELSE

if(age < 18){
	console.log("Sorry, you are not old enough to enter.");
}
else is(age < 21){
	console.log("You can enter, but you cannot drink.");
}
else {
	console.log("Come on in and have a drink!");
}



JS LOOPS

DRY - Don't repeat yourself!



While Loops:
repeat code while a condition is true

while(condition){
	// DO THIS	
}

let count = 1;
while(count <= 5){
	console.log("Count is " + count);
	count+=2;
}

let string = "hello";
let count = 0;

while(count < string.length){
	console.log(string[count]);
	count++;
}

Infinite loops occur when end condition cannot be satisfied:
	let count = 0;
	while(count < 10){
		console.log(count);
	}
	Doesn't increment count so will never reach condition.



For Loops:
repeat with scope-limited variable. similar to, but more compact than while loop.

for(init; condition, step){
	// DO THIS;
}

// Count 1 to 5
for(let count = 1; count <= 5; count++){
	console.log("Count is " + count);
}

let str = "hello";
for(let i = 0; i < str.length; i++){
	console.log(str[i]);
}

